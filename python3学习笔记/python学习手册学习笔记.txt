书籍：《Learning Python》 《Programmming Python》

# 字符串是序列，元祖、列表是序列
字符串方法：
    find eg: s.find('x') 它将返回一个传入字符串的偏移量，如果没有找到返回-1
    replace eg: s.replace('x')  全局查找和搜索字符串
    split()
    upper()
    isalpha()
    rstrip()
    字符串格式化
        notice: 返回的结果不会改变原始字符串，而是会创建一个新的字符串作为结果

    dir函数：返回对象的所有属性，以列表的形式

# 字典不是序列，是映射（mapping)，它们并不包含任何可靠的从左到右的顺序。


# 迭代器协议

# 使用 in 来判断 key 是否存在于字典中


# 动态类型
    在python中，类型实在运行过程中自动决定的，而不是通过代码声明。

    在python中从变量到对象的引用称作引用
        即：引用是一种关系，以内存中的指针实现。 一旦变量被使用（也就是说被引用），  python自动跟随这个变量到对象的连接。

            变量是一个系统表的元素，拥有指向对象的连接的空间
            对象是分配的一块内存，有足够的空间去表示它们所代表的值
            引用是自动形成的从变量到对象的指针

    # 对象的垃圾收集
        在python中，每当一个变量名被赋予了一个新的对象，之前的那个对象占用的空间就会被回收（如果它没有被其他的变量名或者对象引用的话），这种自动回收对象空间的技术叫做垃圾收集
            python如何实现的：它在每个对象中保持了一个计数器，计数器记录了当前指向该对象的引用的数目。一旦（并精确在同一时间）这个计数器被设置为0，这个对象的内存空间就会自动回收。
        在python中类型属于对象

    ## 共享引用
        多个变量名引用了同一个对象
            在python中变量总是一个指向对象的指针，而不是可改变的内存区域的标签


    ## 共享引用和相等
        两种方法检查是否相等
            ==操作符：测试两个被引用的对象是否有相同的值
            is操作符 如果两个变量名精确地指向同一个对象它会返回True

        使用切片来保证引用的对象不会被改变（如果之前引用的对象是一个列表类型）
        